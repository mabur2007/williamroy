@page "/vehicleform"

@using MudBlazor
@using Tracker.UI.App.Data
@inject PatchService PatchService
@inject VehicleService VehicleService

@inherits ComponentBase


<MudPaper Class="d-flex justify-start flex-grow-1 gap-4" Elevation="0">
<MudContainer MaxWidth="MaxWidth.Small">
<MudForm>
    <MudTextField Label="Your name" Variant="Variant.Text" @bind-Value="name"></MudTextField>
    <MudButton OnClick="Submit">Submit</MudButton>
</MudForm>
</MudContainer>
</MudPaper>

<MudSelect T="string" Label="Select an Item">
    @if (patches == null)
{
    <MudProgressCircular Indeterminate="true" />
}
else
{
    @foreach (var item in patches)
    {
        <MudSelectItem Value="@item.PatchCode">@item.PatchCode</MudSelectItem>
    }
}
</MudSelect>

<MudSelect T="string" Label="Select an Item">
    @if (vehicles == null)
    {
        <MudProgressCircular Indeterminate="true" />
    }
    else
    {
        @foreach (var item in vehicles)
        {
            <MudSelectItem Value="@item.RegNo">@item.RegNo</MudSelectItem>
        }
    }
</MudSelect>

@code {
    private string name; 
    //private List<string> addressList = new();
    private PatchDTO[]? patches = null;
    private VehicleDTO[]? vehicles = null;

    private void Submit()
    {
        Console.WriteLine($"Hello, {name}!");
    }



    protected override async Task OnInitializedAsync()
    {
        patches = await PatchService.GetPatchesAsync();
        vehicles = await VehicleService.GetVehiclesAsync();
        //addressList = await VehicleService.GetAddressesFromImage("C:\\Users\\mabur\\source\\repos\\williamroy\\Tracker\\Tracker\\Tracker.UI.App\\Data\\test.jpg");
        //addressList = null;
        StateHasChanged();
    }
}
