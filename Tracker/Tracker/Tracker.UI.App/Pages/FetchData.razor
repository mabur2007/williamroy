@page "/fetchdata"
@using Tracker.UI.App.Data
@inject VehicleService VehicleService

<PageTitle>Weather forecast</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Weather forecast</MudText>
<MudText Class="mb-8">This component demonstrates fetching data from the server.</MudText>
@if (vehicles == null)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
    <MudTable Items="vehicles" Hover="true" SortLabel="Sort By" Elevation="0">
        <HeaderContent>
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<VehicleDTO, object>(x=>x.Color)">Date</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<VehicleDTO, object>(x=>x.RegNo)">Temp. (C)</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<VehicleDTO, object>(x=>x.Make)">Temp. (F)</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<VehicleDTO, object>(x=>x.Model)">Summary</MudTableSortLabel></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Date">@context.RegNo</MudTd>
            <MudTd DataLabel="Temp. (C)">@context.Make</MudTd>
            <MudTd DataLabel="Temp. (F)">@context.Model</MudTd>
            <MudTd DataLabel="Summary">@context.Color</MudTd>
            <MudTd DataLabel="Actions">
                <MudFab @onclick="@(()=>Update(context))" Color="Color.Primary" Icon="@Icons.Material.Filled.Edit" Size="Size.Small" IconSize="Size.Small" />
                <MudFab @onclick="@(()=>Delete(context))" Color="Color.Secondary" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" IconSize="Size.Small" />
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{50, 100}" />
        </PagerContent>
    </MudTable>
}


@code {
    private VehicleDTO[]? vehicles;

    protected override async Task OnInitializedAsync()
    {
        vehicles = await VehicleService.GetVehiclesAsync();
        //var addressList = await VehicleService.GetAddressesFromImage('C:\\Users\\mabur\\source\\repos\\williamroy\\Tracker\\Tracker\\Tracker.UI.App\\Data\test.jpg');
    }

    private void Update(VehicleDTO record)
    {

    }

    private async Task Delete(VehicleDTO record)
    {
    }


}
